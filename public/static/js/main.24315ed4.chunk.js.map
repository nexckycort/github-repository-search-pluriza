{"version":3,"sources":["infrastructure/views/components/ui/Loader/Loader.module.scss","infrastructure/views/components/ui/Container/Container.tsx","infrastructure/views/components/ui/Input/Input.tsx","infrastructure/views/components/ui/Loader/Loader.tsx","infrastructure/views/components/ui/Select/Select.tsx","infrastructure/config/environment.ts","infrastructure/config/api.ts","infrastructure/lib/http/http.ts","infrastructure/repositories/search.repository.ts","domain/services/search.service.ts","infrastructure/views/pages/Home/components/Searcher/Searcher.tsx","infrastructure/views/pages/Home/Home.tsx","infrastructure/views/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Container","children","className","el","Component","rootClass","cn","Input","props","onInput","rest","event","undefined","target","value","autoCorrect","autoCapitalize","spellCheck","Loader","show","s","loader","loaderShow","Select","onChange","options","map","index","text","apiPath","process","apiV1","search","development","production","window","location","origin","test","join","login","Headers","Authorization","localStorage","getItem","successResponses","Array","from","_","http","get","url","a","header","headers","Object","assign","fetch","method","response","json","status","result","error","includes","post","body","data","JSON","stringify","put","delete","searchRepository","byType","searchDTO","searchService","userDTO","Searcher","setUsers","setRepositories","useState","typeSearch","setTypeSearch","qSearch","setQSearch","setStatus","setError","searchAsync","q","type","Error","message","delayedSearch","useCallback","debounce","then","catch","useEffect","length","cancel","placeholder","Home","users","repositories","items","user","src","avatar_url","width","alt","href","html_url","repositorie","name","owner","stargazers_count","description","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24315ed4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2v_QV\",\"loading\":\"Loader_loading__FFWGR\",\"loaderShow\":\"Loader_loaderShow__dcvTc\",\"loaderTransparent\":\"Loader_loaderTransparent__1Az6e\"};","import React, { FC } from 'react'\r\nimport cn from 'classnames'\r\n\r\ninterface Props {\r\n  className?: string\r\n  children?: any\r\n  el?: HTMLElement\r\n}\r\n\r\nconst Container: FC<Props> = ({ children, className, el = 'div' }) => {\r\n  const Component: React.ComponentType<React.HTMLAttributes<HTMLDivElement>> = el as any\r\n\r\n  const rootClass = cn(className)\r\n\r\n  return <Component className={rootClass}>{children}</Component>\r\n}\r\n\r\nexport default Container\r\n","import React, { InputHTMLAttributes } from 'react'\r\n\r\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\r\n  className?: string\r\n  onInput?: (...args: any[]) => any\r\n}\r\n\r\nconst Input: React.FC<Props> = (props) => {\r\n  const { className, children, onInput, ...rest } = props\r\n\r\n  const handleOnInput = (event: React.ChangeEvent<HTMLInputElement>): any => {\r\n    if (onInput !== undefined) {\r\n      onInput(event.target.value)\r\n    }\r\n    return null\r\n  }\r\n\r\n  return <input className={className} onInput={handleOnInput} autoCorrect=\"off\" autoCapitalize=\"off\" spellCheck=\"false\" {...rest} />\r\n}\r\n\r\nexport default Input\r\n","import { FC, HTMLAttributes } from 'react'\r\nimport cn from 'classnames'\r\n\r\nimport s from './Loader.module.scss'\r\n\r\ninterface Props extends HTMLAttributes<HTMLElement> {\r\n  children?: string\r\n  show?: boolean\r\n}\r\n\r\nconst Loader: FC<Props> = ({ children, show = true }) => {\r\n  return <div className={cn(s.loader, show ? s.loaderShow : '')}>{children}</div>\r\n}\r\n\r\nexport default Loader\r\n","import React, { InputHTMLAttributes } from 'react'\r\n\r\ninterface Props extends InputHTMLAttributes<HTMLSelectElement> {\r\n  onChange?: (...args: any[]) => any\r\n  options: Array<{\r\n    value: string\r\n    text: string\r\n  }>\r\n}\r\n\r\nconst Select: React.FC<Props> = (props) => {\r\n  const { className, onChange, options, ...rest } = props\r\n\r\n  const handleOnChange = (event: React.ChangeEvent<HTMLSelectElement>): any => {\r\n    if (onChange !== undefined) {\r\n      onChange(event.target.value)\r\n    }\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <select className={className} onChange={handleOnChange} {...rest}>\r\n      {options.map(({ value, text }, index) => (\r\n        <option key={`${text}-${index}`} value={value}>\r\n          {text}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","// Mapper for environment variables\r\nconst environment = process.env.NODE_ENV\r\nconst apiPath = process.env.REACT_APP_PREFIX_API_V1 ?? ''\r\n\r\nconst origin = {\r\n  development: process.env.REACT_APP_ORIGIN ?? '',\r\n  production: window.location.origin,\r\n  test: process.env.REACT_APP_ORIGIN ?? ''\r\n}\r\n\r\nexport const apiUrlV1 = [origin[environment], apiPath].join('/')\r\n","import { apiUrlV1 } from './environment'\r\n\r\nexport const apiV1 = {\r\n  search: [apiUrlV1, 'search'].join('/'),\r\n  login: ''\r\n}\r\n","const Headers = () => ({\r\n  'Content-Type': 'application/json',\r\n  Authorization: `Bearer ${localStorage.getItem('token') ?? ''}`\r\n})\r\n\r\ninterface ResponseWS<T extends any> {\r\n  status: number\r\n  error: boolean\r\n  response: {\r\n    message: string\r\n    statusCode: string\r\n    data: T\r\n  }\r\n}\r\n\r\ninterface Options {\r\n  headers?: any\r\n  body?: any\r\n}\r\n\r\nconst successResponses = Array.from(new Array(200), (_, index) => {\r\n  return index + 200\r\n})\r\n\r\nconst get = async <T> (url: string, options?: Options) => {\r\n  const header = Headers()\r\n  if (options !== undefined) {\r\n    const { headers = {} } = options\r\n    Object.assign(header, headers)\r\n  }\r\n  const response = await fetch(url, {\r\n    method: 'GET',\r\n    headers: header\r\n  })\r\n  const result = {\r\n    response: await response.json(),\r\n    status: response.status,\r\n    error: false\r\n  }\r\n  if (!successResponses.includes(result.status)) {\r\n    result.error = true\r\n  }\r\n  return result as ResponseWS<T>\r\n}\r\n\r\nconst post = async <T> (url: string, options?: Options) => {\r\n  const header = Headers()\r\n  let data!: any\r\n  if (options !== undefined) {\r\n    const { headers = {}, body = {} } = options\r\n    Object.assign(header, headers)\r\n    data = body\r\n  }\r\n  const response = await fetch(url, {\r\n    method: 'POST',\r\n    headers: header,\r\n    body: JSON.stringify(data)\r\n  })\r\n  const result = {\r\n    response: await response.json(),\r\n    status: response.status,\r\n    error: false\r\n  }\r\n  if (!successResponses.includes(result.status)) {\r\n    result.error = true\r\n  }\r\n  return result as ResponseWS<T>\r\n}\r\n\r\nconst put = async <T> (url: string, options?: Options) => {\r\n  const header = Headers()\r\n  let data!: any\r\n  if (options !== undefined) {\r\n    const { headers = {}, body = {} } = options\r\n    Object.assign(header, headers)\r\n    data = body\r\n  }\r\n  const response = await fetch(url, {\r\n    method: 'PUT',\r\n    headers: header,\r\n    body: JSON.stringify(data)\r\n  })\r\n  const result = {\r\n    response: await response.json(),\r\n    status: response.status,\r\n    error: false\r\n  }\r\n  if (!successResponses.includes(result.status)) {\r\n    result.error = true\r\n  }\r\n  return result as ResponseWS<T>\r\n}\r\n\r\nconst _delete = async <T> (url: string, options?: Options) => {\r\n  const header = Headers()\r\n  let data!: any\r\n  if (options !== undefined) {\r\n    const { headers = {}, body = {} } = options\r\n    Object.assign(header, headers)\r\n    data = body\r\n  }\r\n  const response = await fetch(url, {\r\n    method: 'DELETE',\r\n    headers: header,\r\n    body: JSON.stringify(data)\r\n  })\r\n  const result = {\r\n    response: await response.json(),\r\n    status: response.status,\r\n    error: false\r\n  }\r\n  if (!successResponses.includes(result.status)) {\r\n    result.error = true\r\n  }\r\n  return result as ResponseWS<T>\r\n}\r\n\r\nconst http = {\r\n  get,\r\n  post,\r\n  put,\r\n  delete: _delete\r\n}\r\n\r\nexport default http\r\n","import { apiV1 } from 'infrastructure/config/api'\r\nimport { SearchDTO } from 'infrastructure/dto/SearchDTO'\r\nimport { http } from 'infrastructure/lib'\r\n\r\nexport const searchRepository = {\r\n  byType: async <T> (searchDTO: SearchDTO) => {\r\n    const result = await http.post<T>(apiV1.search, {\r\n      body: searchDTO\r\n    })\r\n\r\n    return result\r\n  }\r\n}\r\n","import { searchRepository } from 'infrastructure/repositories/search.repository'\r\nimport { SearchDTO } from 'infrastructure/dto/SearchDTO'\r\n\r\nexport const searchService = {\r\n  byType: async <T> (userDTO: SearchDTO) => {\r\n    const result = await searchRepository.byType<T>(userDTO)\r\n    return result\r\n  }\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport debounce from 'lodash.debounce'\r\n\r\nimport { Input, Loader, Select } from 'infrastructure/views/components/ui'\r\nimport { searchService } from 'domain/services/search.service'\r\nimport { ResponseApiGithubUserDTO } from 'infrastructure/dto/ResponseApiGithubUserDTO'\r\nimport { ResponseApiGithubRepositorieDTO } from 'infrastructure/dto/ResponseApiGithubUserDTO copy'\r\n\r\ninterface Props {\r\n  setUsers: React.Dispatch<React.SetStateAction<ResponseApiGithubUserDTO | undefined>>\r\n  setRepositories: React.Dispatch<React.SetStateAction<ResponseApiGithubRepositorieDTO | undefined>>\r\n}\r\n\r\nconst Searcher: React.FC<Props> = ({ setUsers, setRepositories }) => {\r\n  const [typeSearch, setTypeSearch] = useState<'users' | 'repositories'>('users')\r\n\r\n  const [qSearch, setQSearch] = useState('')\r\n\r\n  const [status, setStatus] = useState<'idle' | 'pending' | 'success' | 'error'>('idle')\r\n\r\n  const [error, setError] = useState('')\r\n\r\n  const searchAsync = async () => {\r\n    const { error, response } = await searchService.byType<ResponseApiGithubUserDTO | ResponseApiGithubRepositorieDTO>({\r\n      q: qSearch,\r\n      type: typeSearch\r\n    })\r\n    if (error) {\r\n      throw new Error(response.message)\r\n    }\r\n    return response.data\r\n  }\r\n\r\n  const delayedSearch = useCallback(\r\n    debounce(() => {\r\n      setUsers(undefined)\r\n      setRepositories(undefined)\r\n      setStatus('pending')\r\n      searchAsync()\r\n        .then((result) => {\r\n          setStatus('success')\r\n          if (typeSearch === 'users') setUsers(result as ResponseApiGithubUserDTO)\r\n          else if (typeSearch === 'repositories') setRepositories(result as ResponseApiGithubRepositorieDTO)\r\n        })\r\n        .catch((error) => {\r\n          setStatus('error')\r\n          setError(error.message)\r\n        })\r\n    }, 1000),\r\n    [qSearch, typeSearch]\r\n  )\r\n\r\n  const options = [\r\n    {\r\n      text: 'Users',\r\n      value: 'users'\r\n    },\r\n    {\r\n      text: 'Repositories',\r\n      value: 'repositories'\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    if (qSearch.length >= 3) {\r\n      delayedSearch()\r\n    } else {\r\n      setUsers(undefined)\r\n      setRepositories(undefined)\r\n    }\r\n    return delayedSearch.cancel\r\n  }, [qSearch, typeSearch, delayedSearch])\r\n\r\n  return (\r\n    <div className=\"pt-4\">\r\n      <h1>GitHub Searcher</h1>\r\n      <p>Search users of repositories below</p>\r\n      {status === 'error' && <span>{error}</span>}\r\n      {status === 'pending' && <Loader />}\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-5 col-md-8 col-sm-8\">\r\n          <Input type=\"text\" className=\"form-control\" placeholder=\"Start typing to search ..\" onInput={setQSearch} />\r\n        </div>\r\n        <div className=\"col-lg-2 col-md-2 col-sm-4\">\r\n          <Select className=\"form-select\" options={options} onChange={setTypeSearch} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Searcher\r\n","/* eslint-disable @typescript-eslint/indent */\r\nimport React, { useState } from 'react'\r\n\r\nimport { ResponseApiGithubUserDTO } from 'infrastructure/dto/ResponseApiGithubUserDTO'\r\nimport { ResponseApiGithubRepositorieDTO } from 'infrastructure/dto/ResponseApiGithubUserDTO copy'\r\n\r\nimport { Searcher } from './components'\r\n\r\nconst Home: React.FC = () => {\r\n  const [users, setUsers] = useState<ResponseApiGithubUserDTO>()\r\n  const [repositories, setRepositories] = useState<ResponseApiGithubRepositorieDTO>()\r\n\r\n  return (\r\n    <>\r\n      <Searcher setUsers={setUsers} setRepositories={setRepositories} />\r\n      <div className=\"row mt-4\">\r\n        {users !== undefined\r\n          ? users.items.map((user, index) => {\r\n              return (\r\n                <div key={`user-${index}`} className=\"col-lg-4 col-md-6 col-sm-6 mb-4\">\r\n                  <div className=\"card\">\r\n                    <img src={user.avatar_url} width=\"100%\" alt=\"...\" />\r\n                    <div className=\"card-body\">\r\n                      <h5 className=\"card-title\">Name: {user.login}</h5>\r\n                      <a href={user.html_url} target=\"_blank\" className=\"btn btn-primary\">\r\n                        Go to profile\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })\r\n          : repositories !== undefined\r\n          ? repositories.items.map((repositorie, index) => {\r\n              return (\r\n                <div key={`repositorie-${index}`} className=\"col-lg-4 col-md-6 col-sm-6 mb-4\">\r\n                  <div className=\"card\">\r\n                    <img src=\"https://via.placeholder.com/300x150\" className=\"card-img-top\" alt=\"...\" />\r\n                    <div className=\"card-body\">\r\n                      <h5 className=\"card-title\">Name: {repositorie.name}</h5>\r\n                      <p className=\"card-text\">Author: {repositorie?.owner?.login ?? ''}</p>\r\n                      <p className=\"card-text\">Stars: {repositorie.stargazers_count}</p>\r\n                      <p className=\"card-text\">description: {repositorie.description}</p>\r\n                      <a href={repositorie.html_url} target=\"_blank\" className=\"btn btn-primary\">\r\n                        Go to repository\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })\r\n          : null}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nimport { Container } from 'infrastructure/views/components/ui'\r\nimport Home from 'infrastructure/views/pages/Home'\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <Container className=\"container\">\r\n      <Home />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","/* eslint-disable @typescript-eslint/no-floating-promises */\r\nimport { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry != null && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport 'bootstrap/dist/js/bootstrap.bundle'\r\n\r\nimport 'index.scss'\r\n\r\nimport App from 'infrastructure/views/App'\r\nimport reportWebVitals from 'reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}